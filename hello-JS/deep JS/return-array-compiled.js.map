{"version":3,"sources":["return-array.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;;;AAIA,SAAS,EAAT,CAAY,CAAZ,EAAc;AACV,QAAI,QAAQ,CAAZ;AAAA,QACI,MAAM,EADV;;AAGA;AACA,QAAG,CAAC,QAAQ,CAAR,CAAJ,EAAgB,OAAO,EAAP;AAChB,QAAG,CAAC,MAAM,CAAN,CAAJ,EAAc,OAAO,EAAP,CANJ,CAMgB;AAC1B,QAAG,CAAC,UAAU,CAAV,CAAJ,EAAkB,OAAO,EAAP,CAPR,CAOmB;AAC7B,QAAG,CAAC,UAAU,CAAV,EAAY,KAAZ,EAAkB,GAAlB,CAAJ,EAA4B,OAAO,EAAP;;AAE5B;;AAEA;AACA,QAAI,OAAO,EAAX;AACA;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EAA2B;AACvB;AACA,YAAI,MAAM,QAAQ,CAAR,EAAU,EAAV,CAAV;AACA;AACA,YAAI,CAAC,WAAW,IAAX,EAAiB,GAAjB,CAAL,EAA4B;AACxB;AACH,SAFD,MAEK;AACD,iBAAK,IAAL,CAAU,GAAV;AACH;AAEJ;AACD,WAAO,IAAP;AACH;;AAED;AACA,SAAS,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,EAA4B;AACxB,WAAO,KAAK,KAAL,CAAY,KAAK,MAAL,MAAiB,MAAM,KAAN,GAAa,CAA9B,IAAmC,KAA/C,CAAP;AACH;;AAED;AACA,SAAS,UAAT,CAAoB,GAApB,EAAyB,GAAzB,EAA6B;AACzB,SAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,IAAI,MAAvB,EAA+B,GAA/B,EAAmC;AAC/B,YAAG,IAAI,CAAJ,MAAW,GAAd,EAAkB;AACd,mBAAO,KAAP;AACH;AACJ;AACD,WAAO,IAAP;AACH;;AAED;AACA,SAAS,OAAT,CAAiB,GAAjB,EAAqB;AACjB,QAAG,GAAH,EAAO;AACH,eAAO,IAAP;AACH;AACD,WAAO,KAAP;AACH;;AAED;AACA,SAAS,KAAT,CAAe,GAAf,EAAmB;AACf,QAAG,OAAO,GAAP,KAAgB,QAAnB,EAA4B;AACxB,eAAO,IAAP;AACH;AACD,WAAO,KAAP;AACH;;AAED;AACA,SAAS,SAAT,CAAmB,GAAnB,EAAuB,KAAvB,EAA6B,GAA7B,EAAiC;AAC7B,QAAG,OAAO,KAAP,IAAgB,OAAO,GAA1B,EAA8B;AAC1B,eAAO,IAAP;AACH;AACD,WAAO,KAAP;AACH;;AAED;AACA,SAAS,SAAT,CAAmB,GAAnB,EAAuB;AACnB,QAAG,MAAM,KAAK,KAAL,CAAW,GAAX,CAAT,EAAyB;AACrB,eAAO,KAAP;AACH;AACD,WAAO,IAAP;AACH;;AAED,IAAI,SAAS,GAAG,EAAH,CAAb;AACA,QAAQ,GAAR,CAAY,MAAZ","file":"return-array-compiled.js","sourcesContent":["/*\n* 编写一个javscript函数 fn，该函数有一个参数 n（数字类型），\n* 其返回值是一个数组，该数组内是 n 个随机且不重复的整数，且整数取值范围是 [2, 32]\n*\n*   开发插件的的几个原则：\n*       可用： 能够完成基本的功能\n*       健壮： 对入口有一定的检测（参数）  ---入口\n*       可靠： 保证有正确的返回值（即使遇到错误）   ---出口\n*       宽容： 如果参数的类型不对，是否可以允许其继续执行程序\n*       精益求精： 时刻以这四个原则要求自己\n*\n* */\n/*\n//核心代码\nfunction fn(n){\n    //判断参数是否存在并且为数字\n    if(n && typeof(n) === \"number\"){\n        //判断参数是否在0到31之间\n        if(n <= 31 && n >= 0){\n            //判断是否为整数\n            if(!isInteger(n)){\n                console.log(\"请输入整数n\");\n                return false;\n            }\n            //生成一个容器\n            let temp = [];\n            //便利个数\n            for (let i = 0; i < n; i++){\n                //生成一个随机数\n                let rnd = getRand(2,32);\n                //判断是否重复\n                if( !checkInArr(temp, rnd) ){\n                    i--;\n                }else{\n                    temp.push(rnd);\n                }\n\n            }\n            console.log(temp);\n        }\n        else{\n            console.log(\"请输入0到31之间的参数n\")\n        }\n    }else{\n        console.log(\"请输入正确的参数n\");\n    }\n}*/\n\n/*\n* 改良版的核心代码\n* */\n\nfunction fn(n){\n    var start = 2,\n        end = 32;\n\n    //校验\n    if(!isThere(n)) return [];\n    if(!isNum(n)) return [];  //可做如果是字符串，允许进入的操作\n    if(!isInteger(n)) return []; //可做如果是小数，允许进入的操作\n    if(!isRandNum(n,start,end)) return [];\n\n    //核心处理\n\n    //生成一个容器\n    let temp = [];\n    //遍历个数\n    for (let i = 0; i < n; i++){\n        //生成一个随机数\n        let rnd = getRand(2,32);\n        //判断是否重复\n        if( !checkInArr(temp, rnd) ){\n            i--;\n        }else{\n            temp.push(rnd);\n        }\n\n    }\n    return temp;\n}\n\n//生成随机数函数\nfunction getRand(start, end){\n    return Math.floor( Math.random() * (end - start +1) + start);\n}\n\n//判断是否重复函数\nfunction checkInArr(arr, num){\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i] === num){\n            return false;\n        }\n    }\n    return true;\n}\n\n//判断是否存在\nfunction isThere(num){\n    if(num){\n        return true;\n    }\n    return false;\n}\n\n//判断是否为数字类型\nfunction isNum(num){\n    if(typeof(num) === \"number\"){\n        return true\n    }\n    return false;\n}\n\n//判断是否为复合区间内的数字\nfunction isRandNum(num,start,end){\n    if(num >= start && num <= end){\n        return true;\n    }\n    return false;\n}\n\n//判断是否为整数\nfunction isInteger(num){\n    if(num - Math.floor(num)){\n        return false;\n    }\n    return true;\n}\n\nlet result = fn(22);\nconsole.log(result);\n\n\n\n"]}